# - name: apt-fast | repo
#   become: yes
#   ansible.builtin.apt_repository:
#     repo: 'ppa:apt-fast/stable'

- name: steam | key
  become: yes
  tags: media
  ansible.builtin.get_url:
    url: 'https://repo.steampowered.com/steam/archive/stable/steam.gpg'
    dest: '/etc/apt/keyrings/steam.gpg'

- name: steam | repo
  become: yes
  tags: media
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64,i386 signed-by=/etc/apt/keyrings/steam.gpg] https://repo.steampowered.com/steam/ stable steam'

- name: syncthing | key
  become: yes
  tags: workstation-ui
  ansible.builtin.get_url:
    url: 'https://syncthing.net/release-key.gpg'
    dest: '/etc/apt/keyrings/syncthing.gpg'

- name: syncthing | repo
  become: yes
  tags: workstation-ui
  ansible.builtin.apt_repository:
    repo: 'deb [arch=amd64 signed-by=/etc/apt/keyrings/syncthing.gpg] https://apt.syncthing.net/ syncthing candidate'

- name: Update apt-get repo and cache
  apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
  become: yes

- name: Upgrade all apt packages
  apt: upgrade=dist force_apt_get=yes
  become: yes

- name: install common utilities on Debian machines
  apt: pkg={{ item }} state=present
  tags: install
  become: yes
  with_items:
    - apt-fast
    - byobu
    - curl
    - git
    - build-essential
    - jid
    - jq
    - tmux
    - smem # Tool that does good job of figuring out "real" memory use of processes
    - automake
    - silversearcher-ag
    - mosh
    - fzf
    - ripgrep
    - kitty
    - luajit
    - neovim
    - python3
    - python3-neovim
    - python3-pip
    - golang-go
      # For building nvim
    - ninja-build
    - gettext
    - libtool
    - libtool-bin
    - autoconf
    - automake
    - cmake
    - g++
    - pkg-config
    - unzip
    - curl
    - doxygen
    - zsh

- name: install GUI utilities on Debian machines
  tags: workstation-ui
  block:
    - name: apt
      apt: pkg={{ item }} state=present
      become: yes
      with_items:
        - vanilla-gnome-desktop
        - syncthing
    - name: flatpak
      community.general.flatpak:
        name:
          - com.jetbrains.DataGrip

- name: install GUI extras on Debian machines
  tags: media
  block:
  - name: apt
    apt: pkg={{ item }} state=present
    become: yes
    with_items:
      - steam
      - keepassxc
  - name: flatpak
    community.general.flatpak:
      name:
        - com.plexamp.Plexamp
        - tv.plex.PlexDesktop
        - com.jetbrains.DataGrip

##
# node.js installation (latest stable instead of Ubuntu's out-of-date one)
#
- name: Node.js | Run the debian setup.
  shell: "curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -"
  tags: nodejs
  become: yes

- name: Node.js | Install nodejs and npm
  apt: pkg={{ item }} state=present
  tags: nodejs
  become: yes
  with_items:
    - nodejs
# Install neovim w/ an appimage
# - name: Install neovim

# shell: "wget https://github.com/neovim/neovim/releases/download/stable/nvim.appimage -O /opt/nvim.appimage"
# become: yes

# - name: neovim permissions
# shell: "chmod u+x /opt/nvim.appimage"

- name: Clone pyenv
  ansible.builtin.git:
    repo: 'https://github.com/pyenv/pyenv.git'
    dest: ~/.pyenv

- name: Clone pyenv virtualenv
  ansible.builtin.git:
    repo: 'https://github.com/pyenv/pyenv-virtualenv.git'
    dest: ~/.pyenv/plugins/pyenv-virtualenv

- name: Set login shell of user {{ ansible_env.USER }} to `/bin/zsh` with `usermod`
  ansible.builtin.command: usermod --shell /bin/zsh {{ ansible_env.USER }}
  become: true
  changed_when: false
